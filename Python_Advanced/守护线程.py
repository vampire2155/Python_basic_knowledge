import threading,time
'''
守护线程的特点：
1、设置守护线程， 必须在线程启动（t1.start()）之前设置
2、其作用就是在 主线程结束想要退出的时候，不需要在等待子线程运行结束，直接退出就可以了。
3、只对设置了守护线程的 子线程生效。
第3点的例子：有2个子线程，线程1 设置了守护线程，线程2没有设置守护线程，当主线程 结束运行的时候，这时  **进程**  会去查看 线程1和线程2是否有设置
守护线程，如果都没有设置守护线程，则此时程序结束运行。如果线程1 设置了守护线程，则会去查看线程2是否设置了守护线程，如果没有，则查看线程2是否结束运行，
如果线程2 此时还没有结束运行，则会等待。直到线程2 结束运行，程序结束运行。如果线程2已经运行结束，则程序直接结束运行。
'''

#题目要求：就是当主线程打印了“不需要再吃包子了”以后，子线程可以立即结束运行。 这时就需要用到   守护线程   。
a = []
def foo():
    while True:
        a.append('1')
        time.sleep(3)
        print ('生产了一个包子')
        time.sleep(3)
t1 = threading.Thread(target=foo)
#设置守护线程
t1.setDaemon(True)
t1.start()

for i in range(0,5):
    if a:
        a.remove('1')
        time.sleep(3)
        print ('吃掉了一个包子')
    time.sleep(3)
print ('不需要再吃包子了')
